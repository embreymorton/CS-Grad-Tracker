#!/usr/bin/env node
// workaround something broken with jsdom, which mongoose depends on:
const util = require('util')
global.TextDecoder = util.TextDecoder
global.TextEncoder = util.TextEncoder
var mongoose = require('mongoose')
mongoose.Promise = require('bluebird')

require('../env').load()

var app = require('../app.js')

global.server = {}

/*
Once a connection with the database has been secured, start the app
on host:port
*/
console.log('Starting server in ' + process.env.mode + ' mode...')
mongoose.connect(process.env.databaseString)
mongoose.connection
  .on('error', console.error.bind(console, 'connection error:'))
  .once('open', function () {
    console.log("App running at " + process.env.host + ":" + process.env.port)
    global.server = app.listen(process.env.port, process.env.host)
    process.on('uncaughtException', async (err) => {
      console.error(err)
      console.error("Backend process crashed! :(")
      if (process.env.mode == 'development') {
        const {send, generateDeveloperEmail} = require('./controllers/email')
        const response = await send(generateDeveloperEmail(
          "Backend Crash",
          `From \`bin/www\`'s uptime monitoring: The server has crashed with this error:
          ${err}`
        ))
        if (!response) console.error("Awkward... The exception monitoring email was unable to be sent.")
      }
      process.exit(1)
    })
  })
